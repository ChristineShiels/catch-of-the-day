{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","components/Order.js","components/Fish.js","sample-fishes.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","e","preventDefault","storeName","current","value","props","history","push","Fragment","className","onSubmit","this","type","required","placeholder","defaultValue","ref","Component","Header","tagline","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","event","fish","name","price","parseFloat","status","desc","image","addFish","currentTarget","reset","EditFishform","handleChange","console","log","updatedFish","updateFish","index","onChange","onClick","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","Object","keys","fishes","map","key","EditFishForm","loadSampleFishes","Order","renderOrder","count","order","deleteFromOrder","orderIds","total","reduce","prevTotal","Fish","handleClick","addToOrder","details","isAvailable","src","alt","disabled","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","notFound","Router","BrowserRouter","Switch","Route","exact","path","component","NotFound","render","document","querySelector"],"mappings":"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","file":"static/js/main.832e43e9.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"glittery\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"vintage\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"heavy\",\n    \"hand-crafted\",\n    \"tie-dyed\",\n    \"bespoke\",\n    \"curated\",\n    \"retro\",\n    \"lit\",\n    \"fierce\",\n    \"craft\",\n    \"turnt\",\n    \"itchy\",\n    \"fuzzy\",\n    \"snuggly\",\n    \"mysterious\",\n    \"nervous\",\n    \"cuddly\",\n    \"warm\",\n    \"short\",\n    \"fluffy\",\n    \"cute\",\n    \"moist\",\n    \"befuddled\"\n  ];\n\n  const nouns = [\n    \"cats\",\n    \"kittens\",\n    \"penguins\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"capybaras\",\n    \"snakes\",\n    \"hipsters\",\n    \"socks\",\n    \"unicorns\",\n    \"moustaches\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"octopi\",\n    \"fungi\",\n    \"officers\",\n    \"elephants\",\n    \"skulls\",\n    \"dinosaurs\",\n    \"lemons\",\n    \"mooses\",\n    \"toes\",\n    \"fingers\",\n    \"noses\",\n    \"eyes\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\r\nimport { getFunName } from \"../helpers.js\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nclass StorePicker extends React.Component {\r\n    myInput = React.createRef();\r\n\r\n    static propTypes = {\r\n        history: PropTypes.object\r\n    }\r\n\r\n    goToStore = (e) => {\r\n        // stop from reloading page\r\n        e.preventDefault();\r\n        // get text from input\r\n        const storeName = this.myInput.current.value;\r\n        // go to store page\r\n        this.props.history.push(`/store/${storeName}`);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <React.Fragment>\r\n            <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n                <h2>Please Enter a Store</h2>\r\n                <input type=\"text\" required placeholder=\"Store Name\" defaultValue={getFunName()} ref={this.myInput} />\r\n                <button type=\"submit\" >Visit Store ➡</button>\r\n            </form>\r\n        </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StorePicker;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = (props) => (\r\n    <header className=\"top\">\r\n        <h1>Catch\r\n            <span className=\"ofThe\">\r\n                <span className=\"of\">of</span>\r\n                <span className=\"the\">the</span>\r\n            </span>Day</h1>\r\n        <h3 className=\"tagline\">\r\n            <span>{props.tagline}</span>\r\n        </h3>\r\n    </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n    tagline: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddFishForm extends React.Component {\r\n\r\n    nameRef = React.createRef();\r\n    priceRef = React.createRef();\r\n    statusRef = React.createRef();\r\n    descRef = React.createRef();\r\n    imageRef = React.createRef();\r\n\r\n    static propTypes = {\r\n        addFish: PropTypes.func\r\n    }\r\n\r\n    createFish = (event) => {\r\n        // stop submitting\r\n        event.preventDefault();\r\n        // make a fish\r\n        const fish = {\r\n            name: this.nameRef.current.value,\r\n            price: parseFloat(this.priceRef.current.value),\r\n            status: this.statusRef.current.value,\r\n            desc: this.descRef.current.value,\r\n            image: this.imageRef.current.value,\r\n        };\r\n        this.props.addFish(fish);\r\n        // refresh form\r\n        event.currentTarget.reset();\r\n    }\r\n    render() {\r\n        return (\r\n        <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n            <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\"/>\r\n            <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\"/>\r\n            <select name=\"status\" ref={this.statusRef}>\r\n                <option value=\"available\">Fresh!</option>\r\n                <option value=\"unavailable\">Sold Out!</option>\r\n            </select>\r\n            <textarea name=\"desc\" ref={this.descRef} placeholder=\"Description\"></textarea>\r\n            <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\"/>\r\n            <button type=\"submit\">+ Add Fish</button>\r\n        </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddFishForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass EditFishform extends React.Component {\r\n\r\n    static propTypes = {\r\n        fish: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number\r\n        }),\r\n        index: PropTypes.string,\r\n        updateFish: PropTypes.func\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        console.log(event.currentTarget.value);\r\n        // update fish in state\r\n        // take a copy of the current fish and overwrite the property that changes\r\n        const updatedFish = { ...this.props.fish, [event.currentTarget.name]: event.currentTarget.value };\r\n        // call function through props to update state in app.js\r\n        this.props.updateFish(this.props.index, updatedFish)\r\n\r\n    }\r\n    render() {\r\n        return (\r\n        <div className=\"fish-edit\">\r\n            <input\r\n                name=\"name\"\r\n                onChange={this.handleChange}\r\n                value={this.props.fish.name}\r\n                type=\"text\"/>\r\n            <input\r\n            name=\"price\"\r\n            onChange={this.handleChange}\r\n            value={this.props.fish.price}\r\n            type=\"text\"/>\r\n            <select name=\"status\">\r\n                <option value=\"available\">Fresh!</option>\r\n                <option value=\"unavailable\">Sold Out!</option>\r\n            </select>\r\n            <textarea\r\n                name=\"desc\"\r\n                onChange={this.handleChange}\r\n                value={this.props.fish.desc}>\r\n                </textarea>\r\n            <input\r\n                name=\"image\"\r\n                onChange={this.handleChange}\r\n                value={this.props.fish.image}\r\n                type=\"text\"/>\r\n            <button onClick={() => this.props.deleteFish(this.props.index)}>- Remove Fish</button>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditFishform;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = (props) => (\r\n    <nav className=\"login\">\r\n        <h2>Inventory Login</h2>\r\n        <p>Sign in to manage your store's inventory.</p>\r\n        <button className=\"github\" onClick={() => props.authenticate('Github')}>Log In With Github</button>\r\n        <button className=\"facebook\" onClick={() => props.authenticate('Facebook')}>Log In With Facebook</button>\r\n    </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n    authenticate: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Login;","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyBgfig7h0DmVQCP5JftFvRqYCEcYnNHERM\",\r\n    authDomain: \"catch-of-the-day-4322f.firebaseapp.com\",\r\n    databaseURL: \"https://catch-of-the-day-4322f-default-rtdb.firebaseio.com\",\r\n    projectId: \"catch-of-the-day-4322f\",\r\n    storageBucket: \"catch-of-the-day-4322f.appspot.com\",\r\n    messagingSenderId: \"867897239595\",\r\n    appId: \"1:867897239595:web:0f3b712d9a17fef81fe26e\"\r\n  });\r\n\r\n  const base = Rebase.createClass(firebaseApp.database());\r\n\r\n  export { firebaseApp };\r\n\r\n  export default base;","import React from 'react';\r\nimport AddFishForm from './AddFishForm.js'\r\nimport EditFishForm from './EditFishForm.js';\r\nimport Login from './Login.js';\r\nimport PropTypes from 'prop-types';\r\nimport firebase from 'firebase';\r\nimport base, { firebaseApp } from '../base.js';\r\n\r\nclass Inventory extends React.Component {\r\n\r\n    static propTypes = {\r\n        fishes: PropTypes.object,\r\n        updateFish: PropTypes.func,\r\n        deleteFish: PropTypes.func,\r\n        loadSampleFishes: PropTypes.func,\r\n    };\r\n\r\n    state = {\r\n        uid: null,\r\n        owner: null\r\n    };\r\n\r\n    componentDidMount () {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if(user) {\r\n                this.authHandler({ user });\r\n            }\r\n        })\r\n    };\r\n\r\n    authHandler = async (authData) => {\r\n        // Look up current store in firebase database\r\n        const store = await base.fetch(this.props.storeId, { context: this });\r\n        // claim it if there is no owner\r\n        if (!store.owner) {\r\n            // save as our own\r\n            await base.post(`${this.props.storeId}/owner`, {data: authData.user.uid})\r\n        };\r\n        // set state of inventory component to reflect current user\r\n        this.setState({\r\n            uid: authData.user.uid,\r\n            owner: store.owner || authData.user.uid\r\n        });\r\n        console.log(store);\r\n    };\r\n\r\n    authenticate = (provider) => {\r\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n        firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\r\n    };\r\n\r\n    logout = async () => {\r\n        await firebase.auth().signOut();\r\n        this.setState({ uid: null });\r\n    }\r\n\r\n    render() {\r\n        const logout = <button onClick={this.logout}>Log Out</button>\r\n\r\n        // Check if user is logged in\r\n        if (!this.state.uid) {\r\n            return <Login authenticate={this.authenticate}/>\r\n        }\r\n        // check if they are the store owner\r\n        if(this.state.uid !== this.state.owner) {\r\n            return(\r\n                <div>\r\n                    <p>Sorry, you are not the owner of this store, inventory is only available to the owner!</p>\r\n                    {logout}\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n        <div className=\"inventory\">\r\n            <h2>Inventory</h2>\r\n            {logout}\r\n            {Object.keys(this.props.fishes).map(key =>\r\n            <EditFishForm\r\n                key={key}\r\n                index={key}\r\n                fish={this.props.fishes[key]}\r\n                updateFish={this.props.updateFish}\r\n                deleteFish={this.props.deleteFish} />)}\r\n            <AddFishForm\r\n                addFish={this.props.addFish}/>\r\n            <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Inventory;","import React from 'react';\r\nimport { formatPrice } from '../helpers.js';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Order extends React.Component {\r\n\r\n    static propTypes = {\r\n        fishes: PropTypes.object,\r\n        order: PropTypes.object,\r\n        removeFromOrder: PropTypes.func\r\n    }\r\n\r\n    renderOrder = (key) => {\r\n        const fish = this.props.fishes[key];\r\n        const count = this.props.order[key];\r\n        // if no fish exist, do nothing (handles the time between persisting order and firebase updating the state)\r\n        if (!fish) return null;\r\n        // check if fish exists AND if that fish is available\r\n        const isAvailable = fish && fish.status === 'available';\r\n        if(!isAvailable) {\r\n            return<li key={key}>\r\n                Sorry, {fish ? fish.name : 'fish'} is no longer available.\r\n            </li>\r\n        }\r\n        if(count !== null) {\r\n        return<li key={key}>\r\n            {count} lbs {fish.name} {formatPrice(count * fish.price)} <button onClick={() => this.props.deleteFromOrder(key)}>&times;</button>\r\n            </li>;\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const orderIds = Object.keys(this.props.order);\r\n        const total = orderIds.reduce((prevTotal, key) => {\r\n            const fish = this.props.fishes[key];\r\n            const count = this.props.order[key];\r\n            const isAvailable = fish && fish.status === 'available';\r\n            if(isAvailable) {\r\n                return prevTotal + (count * fish.price);\r\n            }\r\n            return prevTotal;\r\n        }, 0);\r\n        return (\r\n        <div className=\"order-wrap\">\r\n            <h2>Your Order</h2>\r\n            <ul className=\"order\">\r\n                {orderIds.map(this.renderOrder)}\r\n            </ul>\r\n            <div className=\"total\">Total:\r\n            <strong>{formatPrice(total)}</strong></div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Order;","import React from 'react';\r\nimport { formatPrice } from '../helpers.js';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Fish extends React.Component {\r\n\r\n    static propTypes = {\r\n        details: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number\r\n        }),\r\n        addToOrder: PropTypes.func\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.props.addToOrder(this.props.index);\r\n    }\r\n\r\n    render() {\r\n        const { image, name, desc, price, status } = this.props.details;\r\n        const isAvailable = status === 'available';\r\n\r\n        return (\r\n        <li className=\"menu-fish\">\r\n            <img src={image} alt={desc}/>\r\n            <h3 className=\"fish-name\">\r\n                {name}\r\n                <span className=\"price\">{formatPrice(price)}</span>\r\n                </h3>\r\n                <p>{desc}</p>\r\n                <button disabled={!isAvailable} onClick={this.handleClick}>{isAvailable ? '+ Add To Order' : 'Sold Out!'}</button>\r\n        </li>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Fish;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Header from './Header.js';\r\nimport Inventory from './Inventory.js';\r\nimport Order from './Order.js';\r\nimport Fish from './Fish.js';\r\nimport base from '../base.js';\r\n\r\nimport sampleFishes from '../sample-fishes.js';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        fishes: {},\r\n        order: {}\r\n    };\r\n\r\n    static propTypes = {\r\n        match: PropTypes.object\r\n    }\r\n\r\n    // sync to firebase when storefront loads\r\n    componentDidMount() {\r\n        const { params } = this.props.match;\r\n        // reinstate local storage to persist order storage through refresh\r\n        const localStorageRef = localStorage.getItem(params.storeId);\r\n        if(localStorageRef) {\r\n            this.setState({\r\n                order: JSON.parse(localStorageRef)\r\n            })\r\n        }\r\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n            context: this,\r\n            state: 'fishes'\r\n        });\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\r\n    };\r\n\r\n    // stops syncing to firebase when you unload the storefront\r\n    componentWillUnmount() {\r\n        base.removeBinding(this.ref);\r\n    };\r\n\r\n\r\naddFish = (fish) => {\r\n    // take a copy of teh existing state\r\n    const fishes = {...this.state.fishes};\r\n    // add new fish to fishes (Date.now is # of ms since 1970)\r\n    fishes[`fish${Date.now()}`] = fish;\r\n    // set new fishes object to state\r\n    this.setState({\r\n        fishes: fishes\r\n    });\r\n};\r\n\r\nupdateFish = (key, updatedFish) => {\r\n    // take a copy of the current state\r\n    const fishes ={ ...this.state.fishes };\r\n    // update that state\r\n    fishes[key] = updatedFish;\r\n    // set update to state\r\n    this.setState({ fishes: fishes });\r\n};\r\n\r\ndeleteFish = (key) => {\r\n    // take a copy of state\r\n    const fishes = { ...this.state.fishes };\r\n    // update the value (must update to null to delete from firebase)\r\n    fishes[key] = null;\r\n    // update the state\r\n    this.setState({ fishes });\r\n};\r\n\r\nloadSampleFishes = () => {\r\nthis.setState({\r\n    fishes: sampleFishes\r\n})};\r\n\r\naddToOrder = (key) => {\r\n    // take a copy of state\r\n    const order = { ...this.state.order };\r\n    // add to order\r\n    order[key] = order[key] + 1 || 1;\r\n    // set state\r\n    this.setState({ order });\r\n};\r\n\r\ndeleteFromOrder = (key) => {\r\n    const order = { ...this.state.order };\r\n    if(order[key] === 1) {\r\n        order[key] = null\r\n    }else {\r\n        order[key] = order[key] - 1;\r\n    };\r\n    this.setState({ order });\r\n};\r\n\r\nrender() {\r\n    return (\r\n        <div className=\"catch-of-the-day\">\r\n            <div className=\"menu\">\r\n                <Header tagline=\"Fresh Seafood Market\"/>\r\n                <ul className=\"fishes\">\r\n                    {Object.keys(this.state.fishes).map(key =>\r\n                    <Fish\r\n                        key={key}\r\n                        index={key}\r\n                        details={this.state.fishes[key]}\r\n                        addToOrder={this.addToOrder} />)}\r\n                </ul>\r\n            </div>\r\n            <Order\r\n                fishes={this.state.fishes}\r\n                order={this.state.order}\r\n                deleteFromOrder={this.deleteFromOrder} />\r\n            <Inventory\r\n                addFish={this.addFish}\r\n                updateFish={this.updateFish}\r\n                deleteFish={this.deleteFish}\r\n                loadSampleFishes={this.loadSampleFishes}\r\n                fishes={this.state.fishes}\r\n                storeId={this.props.match.params.storeId} />\r\n        </div>\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n\r\nconst notFound = (props) => (\r\n    <div>\r\n        <h2>Not Found!!!!!?!</h2>\r\n    </div>\r\n);\r\n\r\nexport default notFound;","import React from 'react';\r\nimport{ BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport StorePicker from \"./StorePicker.js\";\r\nimport App from \"./App.js\";\r\nimport NotFound from \"./NotFound.js\";\r\n\r\n\r\nconst Router = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={StorePicker} />\r\n            <Route path=\"/store/:storeId\" component={App} />\r\n            <Route component={NotFound} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n)\r\n\r\nexport default Router;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Router from './components/Router.js';\r\nimport './css/style.css';\r\n\r\n\r\n\r\nrender(<Router/>, document.querySelector('#main'));"],"sourceRoot":""}